\select@language {english}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Maximum margin separation}}{6}{figure.caption.5}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Number of classifiers evaluated per iteration, NORMA and our algorithm}}{18}{figure.caption.7}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Approximation of the target area by the RBF kernel\relax }}{19}{figure.caption.8}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Example of a random linear classifier}}{21}{figure.caption.9}
\contentsline {figure}{\numberline {3.4}{\ignorespaces A diagram of our method}}{22}{figure.caption.10}
\contentsline {figure}{\numberline {3.5}{\ignorespaces The Pegasos algorithm with weighted samples}}{22}{figure.3.5}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Example of our method converging to a target distribution on a sample dataset.\relax }}{24}{figure.3.6}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Loss functions illustrated}}{25}{figure.3.7}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces iPhone 4S\relax }}{28}{figure.4.1}
\contentsline {figure}{\numberline {4.2}{\ignorespaces OpenGL ES programmable graphic pipeline (simplified)\relax }}{30}{figure.4.2}
\contentsline {figure}{\numberline {4.3}{\ignorespaces PowerVR SGX GPU architecture schematics\relax }}{31}{figure.4.3}
\contentsline {figure}{\numberline {4.4}{\ignorespaces Pyramidal Pegasos Algorithm\relax }}{34}{figure.4.4}
\contentsline {figure}{\numberline {4.5}{\ignorespaces Graphic filter layout used for tracking\relax }}{49}{figure.4.5}
\contentsline {figure}{\numberline {4.6}{\ignorespaces Some experimental results from tracking application\relax }}{50}{figure.4.6}
\contentsline {figure}{\numberline {4.7}{\ignorespaces Examples of training images and clipped textures. \subref {s1} , \subref {s4} Images used for training. \subref {s2}, \subref {s5} Texture area extracted for training \subref {s3}, \subref {s6} Examples of the images used for evaluation. \relax }}{51}{figure.4.7}
\contentsline {figure}{\numberline {4.8}{\ignorespaces Results of testing multiclass approach described in section \ref {multiclass} with 50 classes. Ratio of correctly classified image patches to a total number of patches (accuracy ratio). \subref {lenferns} Dependence of accuracy ratio on a bit length of each Fern (25 Ferns total). \subref {numferns} Dependence of accuracy ratio on a total number of Ferns (8 bits per Fern). \relax }}{51}{figure.4.8}
\contentsline {figure}{\numberline {4.9}{\ignorespaces Illustration of shader layout for improved Ferns classification\relax }}{52}{figure.4.9}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Weights and thresholded probabilities for 16 Ferns encoded in a PNG image (\subref {ts:scr1} for loading in mobile device. Each 16x32 rectangular region encodes a single 9-bit Fern (512 possible values). \subref {ts:scr3} Texture used for training \subref {ts:scr1}. \subref {ts:scr4} Sample of background used for training \subref {ts:scr1}\relax }}{52}{figure.4.10}
\contentsline {figure}{\numberline {4.11}{\ignorespaces Screenshots of texture recognition algorithm in operation. \subref {scre1} , \subref {scre2} are results of using weighted Ferns trained on texture from Figure \ref {s2}, \subref {scre3} uses method trained on Figure \ref {s5}. \relax }}{53}{figure.4.11}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Experimental results comparing the performance of our algorithm to linear implementation of Pegasos and NORMA\relax }}{60}{figure.5.1}
\contentsline {figure}{\numberline {5.2}{\ignorespaces Experimental results comparing the performance of our algorithm implementation of Pegasos and NORMA using Gaussian RBF\relax }}{61}{figure.5.2}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Experimental results comparing the performance of our algorithm to AdaBoost\relax }}{62}{figure.5.3}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Experimental results comparing the performance of our algorithm to online boosting\relax }}{62}{figure.5.4}
\addvspace {10\p@ }
