\BOOKMARK [0][]{chapter*.2}{List of Figures}{}% 1
\BOOKMARK [0][]{chapter*.3}{List of Tables}{}% 2
\BOOKMARK [0][]{chapter.1}{1 Introduction}{}% 3
\BOOKMARK [1][]{section.1.1}{1.1 Aims of research}{chapter.1}% 4
\BOOKMARK [1][]{section.1.2}{1.2 Overview of common methods}{chapter.1}% 5
\BOOKMARK [1][]{section.1.3}{1.3 Algorithm outline}{chapter.1}% 6
\BOOKMARK [1][]{section.1.4}{1.4 Possible applications}{chapter.1}% 7
\BOOKMARK [0][]{chapter.2}{2 Related works}{}% 8
\BOOKMARK [1][]{section.2.1}{2.1 Overview}{chapter.2}% 9
\BOOKMARK [1][]{section.2.2}{2.2 Offline classification algorithms}{chapter.2}% 10
\BOOKMARK [2][]{subsection.2.2.1}{2.2.1 Support vector machines}{section.2.2}% 11
\BOOKMARK [3][]{subsubsection.2.2.1.1}{2.2.1.1 Using kernel trick to create nonlinear classifier}{subsection.2.2.1}% 12
\BOOKMARK [3][]{subsubsection.2.2.1.2}{2.2.1.2 Common methods for offline SVM training}{subsection.2.2.1}% 13
\BOOKMARK [2][]{subsection.2.2.2}{2.2.2 Boosting}{section.2.2}% 14
\BOOKMARK [2][]{subsection.2.2.3}{2.2.3 AdaBoost}{section.2.2}% 15
\BOOKMARK [2][]{subsection.2.2.4}{2.2.4 Other boosting algorithms}{section.2.2}% 16
\BOOKMARK [1][]{section.2.3}{2.3 Online classification algorithms}{chapter.2}% 17
\BOOKMARK [2][]{subsection.2.3.1}{2.3.1 Online SVM}{section.2.3}% 18
\BOOKMARK [3][]{subsubsection.2.3.1.1}{2.3.1.1 NORMA}{subsection.2.3.1}% 19
\BOOKMARK [3][]{subsubsection.2.3.1.2}{2.3.1.2 Pegasos}{subsection.2.3.1}% 20
\BOOKMARK [2][]{subsection.2.3.2}{2.3.2 Online boosting}{section.2.3}% 21
\BOOKMARK [1][]{section.2.4}{2.4 Overview of applications}{chapter.2}% 22
\BOOKMARK [0][]{chapter.3}{3 Description of the proposed two-step algorithm}{}% 23
\BOOKMARK [1][]{section.3.1}{3.1 Derivation of the algorithm}{chapter.3}% 24
\BOOKMARK [2][]{subsection.3.1.1}{3.1.1 Drawbacks of the existing online algorithms}{section.3.1}% 25
\BOOKMARK [2][]{subsection.3.1.2}{3.1.2 Similarity of AdaBoost and linear SVM}{section.3.1}% 26
\BOOKMARK [2][]{subsection.3.1.3}{3.1.3 Adapting AdaBoost to online setting by using modified Pegasos algorithm}{section.3.1}% 27
\BOOKMARK [2][]{subsection.3.1.4}{3.1.4 Linear SVM as weak classifiers}{section.3.1}% 28
\BOOKMARK [1][]{section.3.2}{3.2 Description of the resulting algorithm}{chapter.3}% 29
\BOOKMARK [2][]{subsection.3.2.1}{3.2.1 Algorithm description}{section.3.2}% 30
\BOOKMARK [2][]{subsection.3.2.2}{3.2.2 Possible modifications}{section.3.2}% 31
\BOOKMARK [2][]{subsection.3.2.3}{3.2.3 Comparison to other algorithms}{section.3.2}% 32
\BOOKMARK [0][]{chapter.4}{4 Application of proposed method to object tracking on a mobile device}{}% 33
\BOOKMARK [1][]{section.4.1}{4.1 Resources available on the mobile device: iPhone 4S}{chapter.4}% 34
\BOOKMARK [2][]{subsection.4.1.1}{4.1.1 Overview}{section.4.1}% 35
\BOOKMARK [1][]{section.4.2}{4.2 General-purpose computing on graphics processing units}{chapter.4}% 36
\BOOKMARK [2][]{subsection.4.2.1}{4.2.1 Open GL ES programmable graphic pipeline}{section.4.2}% 37
\BOOKMARK [2][]{subsection.4.2.2}{4.2.2 GPUImage programming library}{section.4.2}% 38
\BOOKMARK [2][]{subsection.4.2.3}{4.2.3 Limitations}{section.4.2}% 39
\BOOKMARK [1][]{section.4.3}{4.3 Modification of Pegasos algorithm for parallel processing}{chapter.4}% 40
\BOOKMARK [2][]{subsection.4.3.1}{4.3.1 Modification description}{section.4.3}% 41
\BOOKMARK [2][]{subsection.4.3.2}{4.3.2 Evaluation}{section.4.3}% 42
\BOOKMARK [1][]{section.4.4}{4.4 Simple local image features}{chapter.4}% 43
\BOOKMARK [1][]{section.4.5}{4.5 Tracking}{chapter.4}% 44
\BOOKMARK [2][]{subsection.4.5.1}{4.5.1 Training regime}{section.4.5}% 45
\BOOKMARK [2][]{subsection.4.5.2}{4.5.2 Position estimation}{section.4.5}% 46
\BOOKMARK [1][]{section.4.6}{4.6 Resulting Application layout}{chapter.4}% 47
\BOOKMARK [1][]{section.4.7}{4.7 Results overview}{chapter.4}% 48
\BOOKMARK [0][]{chapter.5}{5 Evaluation of related algorithms}{}% 49
\BOOKMARK [0][]{chapter.6}{6 Conclusion}{}% 50
